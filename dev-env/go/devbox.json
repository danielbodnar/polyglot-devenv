{
  "packages": ["go@1.22", "golangci-lint@latest", "nushell"],
  "shell": {
    "init_hook": [
      "echo 'Go Development Environment'",
      "go version"
    ],
    "scripts": {
      "build":        "go build ./...",
      "run":          "go run ./cmd/main.go",
      "test":         "go test ./...",
      "test-watch":   "find . -name '*.go' | entr -r go test ./...",
      "format":       "gofmt -w .",
      "lint":         "golangci-lint run",
      "clean":        "go clean -cache -modcache -testcache",
      "mod-tidy":     "go mod tidy",
      "mod-download": "go mod download",
      "vet":          "go vet ./...",
      "watch":        "find . -name '*.go' | entr -r go run ./cmd/main.go",
      "devpod:provision": "bash ../devpod-automation/scripts/provision-go.sh",
      "devpod:connect": "echo '‚ÑπÔ∏è  Each provision creates a new workspace. Use devbox run devpod:provision to create and connect.'",
      "devpod:start": "echo '‚ÑπÔ∏è  Use devbox run devpod:provision to create a new workspace or devpod list to see existing ones.'",
      "devpod:stop": "bash -c 'echo \"üõë Available Go workspaces:\"; devpod list | grep polyglot-go-devpod || echo \"No Go workspaces found\"'",
      "devpod:delete": "bash -c 'echo \"üóëÔ∏è  Go workspaces to delete:\"; devpod list | grep polyglot-go-devpod || echo \"No Go workspaces found\"'",
      "devpod:sync": "echo 'Sync: Update devbox.json and rebuild workspace with devbox run devpod:provision'",
      "devpod:status": "bash -c 'echo \"üìä Go DevPod workspaces:\"; devpod list | grep polyglot-go-devpod || echo \"No Go workspaces found. Run: devbox run devpod:provision\"'"
    }
  },
  "env": {
    "CGO_ENABLED": "0"
  }
}
