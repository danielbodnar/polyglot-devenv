{
  "packages": ["rustc", "cargo", "rust-analyzer", "clippy", "rustfmt", "nushell"],
  "shell": {
    "init_hook": [
      "echo 'Rust Development Environment'",
      "rustc --version",
      "cargo --version"
    ],
    "scripts": {
      "build": "cargo build",
      "build-release": "cargo build --release",
      "run": "cargo run",
      "test": "cargo test",
      "test-watch": "cargo watch -x test",
      "format": "cargo fmt",
      "lint": "cargo clippy -- -D warnings",
      "clean": "cargo clean",
      "check": "cargo check",
      "doc": "cargo doc --open",
      "watch": "cargo watch -x 'run'",
      "devpod:provision": "bash ../devpod-automation/scripts/provision-rust.sh",
      "devpod:connect": "echo '‚ÑπÔ∏è  Each provision creates a new workspace. Use devbox run devpod:provision to create and connect.'",
      "devpod:start": "echo '‚ÑπÔ∏è  Use devbox run devpod:provision to create a new workspace or devpod list to see existing ones.'",
      "devpod:stop": "bash -c 'echo \"üõë Available Rust workspaces:\"; devpod list | grep polyglot-rust-devpod || echo \"No Rust workspaces found\"'",
      "devpod:delete": "bash -c 'echo \"üóëÔ∏è  Rust workspaces to delete:\"; devpod list | grep polyglot-rust-devpod || echo \"No Rust workspaces found\"'",
      "devpod:sync": "echo 'Sync: Update devbox.json and rebuild workspace with devbox run devpod:provision'",
      "devpod:status": "bash -c 'echo \"üìä Rust DevPod workspaces:\"; devpod list | grep polyglot-rust-devpod || echo \"No Rust workspaces found. Run: devbox run devpod:provision\"'"
    }
  },
  "env": {
    "RUST_BACKTRACE": "1"
  }
}