#!/usr/bin/env nu

# Setup script for the Nushell development environment
# Initializes the environment and sets up necessary configurations

use ../common.nu *

def main [] {
    log info "Setting up Nushell development environment..."
    
    # Create necessary directories
    mkdir -p config tmp .nu-plugins
    
    # Initialize git if not already done
    if not (".git" | path exists) {
        log info "Initializing git repository..."
        git init
        ".env" | save .gitignore --append
        "*.log" | save .gitignore --append
        "tmp/" | save .gitignore --append
        ".nu-plugins/" | save .gitignore --append
    }
    
    # Create initial configuration
    setup-nushell-config
    
    # Setup environment file
    setup-env-file
    
    log success "Nushell environment setup completed!"
    log info "Run 'nu scripts/list.nu' to see available scripts"
}

def setup-nushell-config [] {
    let config_file = "config/config.nu"
    
    if not ($config_file | path exists) {
        log info "Creating Nushell configuration..."
        
        '$env.config = {
  show_banner: false
  table: {
    mode: rounded
    index_mode: always
    show_empty: true
  }
  completions: {
    case_sensitive: false
    quick: true
    partial: true
  }
  history: {
    max_size: 100_000
    sync_on_enter: true
  }
  error_style: "fancy"
  use_ansi_coloring: true
  edit_mode: emacs
}

# Custom aliases for development
alias ll = ls -la
alias dev = cd ~/dev
alias projects = ls ~/dev | where type == dir

# Git aliases
alias gs = git status
alias gp = git pull
alias gc = git commit -m

# Development environment shortcuts
alias py = cd python-env
alias ts = cd typescript-env
alias rs = cd rust-env
alias go = cd go-env
alias nu-env = cd nushell-env

# Devbox shortcuts
alias db = devbox
alias dbs = devbox shell
alias dbr = devbox run' | save $config_file --force
        
        log success "Nushell configuration created"
    }
}

def setup-env-file [] {
    if not (".env" | path exists) {
        log info "Creating initial environment file..."
        
        '# Polyglot Development Environment Variables
# This file is auto-generated by Nushell scripts
# Add your custom environment variables below

# Development settings
export NODE_ENV=development
export PYTHONPATH=./src
export RUST_BACKTRACE=1
export GO111MODULE=on

# Add your custom variables below:
' | save .env --force
        
        log success "Initial .env file created"
    }
}